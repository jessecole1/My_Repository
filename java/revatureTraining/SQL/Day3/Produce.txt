+----+-----------------+-------+--------+
| id | name            | price | type   |
+----+-----------------+-------+--------+
|  1 | navel orange    |  1.99 | citrus |
|  2 | mandarin orange |  0.75 | citrus |
|  3 | tangerine       |  0.50 | citrus |
|  4 | red delicious   |  2.00 | apple  |
|  5 | jona gold       |  2.50 | apple  |
|  6 | granny smith    |  1.00 | apple  |
|  7 | blueberry       |  0.40 | berry  |
|  8 | raspberry       |  0.35 | berry  |
|  9 | kiwi            |  0.75 | berry  |
| 10 | watermelon      |  3.99 | melon  |
| 11 | cantaloupe      |  2.99 | melon  |
| 12 | honeydew        |  2.00 | melon  |
| 13 | lettuce         |  2.99 | leafy  |
| 14 | spinach         |  1.99 | leafy  |
| 15 | pumpkin         |  4.99 | marrow |
| 16 | cucumber        |  0.99 | marrow |
| 17 | potato          |  0.45 | root   |
| 18 | yam             |  0.25 | root   |
| 19 | sweet potato    |  0.50 | root   |
| 20 | onion           |  0.33 | allium |
| 21 | garlic          |  0.25 | allium |
| 22 | shallot         |  0.60 | allium |
+----+-----------------+-------+--------+

Create a table named produce 
column: id int primary key 
column: name varchar(45) not null
column: price decimal(10,2) not null
column: type varchar(45) not null

insert these values into the table 

1. Select all records that have a type equal to 'apple' and price greater than 1.00;
2. Select all produce that have the type 'apple', 'root', 'berry', or 'allium';
3. Select all produce that are not an 'apple' and not an 'allium'
4. Select all produce with a type of 'citrus' or 'berry'.
5. Select all produce with a type that starts with 'a'.
6. Select all produce that have a type that is exactly 5 characters long.
7. Select all produce with a price between 0.50 and 1.00.
8. Select all produce that have name between 'o' and 'y'.
9. Select the types and avg price of each type of produce.
10. Select the types of produce that have an avg cost higher than the average all all produce.
11. Select all produce ordered alphabetically ascending.
12. Do the same, but in reverse.
13. Select the first 5 produce records after ordering alphabetically.
14. Select the second 5 produce records after ordering alphabetically.


Questions and answers come from Day 3 Week 4 DQL chapter. 